{"meta":{"title":"Hong Chuan","subtitle":"","description":"","author":"Hong Chuan","url":"http://example.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2024-11-21T14:54:01.507Z","updated":"2024-11-19T02:07:41.000Z","comments":false,"path":"/404.html","permalink":"http://example.com/404.html","excerpt":"","text":""},{"title":"书单","date":"2024-11-21T14:54:02.270Z","updated":"2024-11-19T02:07:41.000Z","comments":false,"path":"books/index.html","permalink":"http://example.com/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2024-11-21T14:54:01.706Z","updated":"2024-11-19T02:07:41.000Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"友情链接","date":"2024-11-21T14:54:02.273Z","updated":"2024-11-19T02:07:41.000Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"分类","date":"2024-11-19T02:07:41.053Z","updated":"2024-11-19T02:07:41.053Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2024-11-21T14:54:02.276Z","updated":"2024-11-19T02:07:41.000Z","comments":false,"path":"repository/index.html","permalink":"http://example.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2024-11-19T02:07:41.058Z","updated":"2024-11-19T02:07:41.058Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"MISC流量分析题","slug":"post","date":"2024-11-23T03:04:19.000Z","updated":"2024-11-23T03:06:49.811Z","comments":true,"path":"2024/11/23/post/","permalink":"http://example.com/2024/11/23/post/","excerpt":"","text":"1.流量分析1拉入科来流量分析 很明显应该在http request和response里面 明显发现有select from flag 字样 而且有%25 所以应该是进行了两层url编码 解析一下 123456789from urllib import parseencoded_str = &#x27;/index.php?url=gopher://127.0.0.1:80/_POST%20%2Fadmin.php%20HTTP%2F1.1%250d%250aHost%3A%20localhost%3A80%250d%250aConnection%3A%20close%250d%250aContent-Type%3A%20application%2Fx-www-form-urlencoded%250d%250aContent-Length%3A%2078%250d%250a%250d%250aid%253D1%2529%2520and%2520if%2528%2528ascii%2528substr%2528%2528select%2520flag%2520from%2520flag%2529%252C1%252C1%2529%2529%253D%252740%2527%2529%252Csleep%25283%2529%252C0%2529%2520--%2520&#x27;# s1 =&quot;%29%2C1%2C1%29%29%3D%2740%27%29%2C&quot;# wd = parse.quote(keyword.encode(&#x27;utf-8&#x27;))# ress = parse.quote(wd.encode(&#x27;gb2312&#x27;))decode_str = parse.unquote(encoded_str)dedecode_str = parse.unquote(decode_str)print(dedecode_str) 输出为 1234567/index.php?url=gopher://127.0.0.1:80/_POST /admin.php HTTP/1.1Host: localhost:80Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 78id=1) and if((ascii(substr((select flag from flag),1,1))=&#x27;40&#x27;),sleep(3),0) 分析这行sql语句意思，如果选择字符ascii等于40,那么延迟3秒 应该是进行sql盲注 2.流量分析2拉入科来 用get方法获取html页面 过滤一下 1srcip=39.105.136.196 and protocol=http 生成flag为 flag{17uajil} 3.easycap拉入科来 点开看 每个额外数据都有 字符 写代码 123456789import pysharkfrom datetime import timedeltaimport re cap = pyshark.FileCapture(&quot;d5ba8f87969145059170a222f01e7883.pcap&quot;, tshark_path=&quot;D:\\Program Files\\Wireshark\\\\tshark.exe&quot;)print(cap)for pkt in cap: if(int(pkt.length)==67): print(bytes.fromhex(pkt.tcp.payload).decode(&#x27;utf-8&#x27;),end=&#x27;&#x27;) 简单解码解析，组装输出payload值 4.流量分析拉入进行流量分析，筛选http协议 显然是盲注攻击 筛选数据包，如果sql注入攻击失败，返回http_response 数据包大小为661 注入成功返回数据包大于661 所以进行筛选 写代码 1234567891011121314151617181920212223import pysharkfrom datetime import timedeltaimport re cap = pyshark.FileCapture(&quot;4d7c14206a5c4b74a0af595992bbf439.pcapng&quot;, display_filter=&#x27;http&#x27;, tshark_path=&quot;D:\\Program Files\\Wireshark\\\\tshark.exe&quot;)# print(cap)flagit = [&#x27;.&#x27;*40 for _ in range(40)]p1 = r&#x27;flag%20limit%200,1\\),(\\d+),1\\)&#x27;p2 = r&#x27;,1\\)\\)=(\\d+)%23&#x27;for pkt in cap: if int(pkt.length) &lt; 600: # 当包长度小于 650 时为请求包，记录uri 和 时间 time_s = pkt.sniff_time url = pkt.http.request_full_uri else: if(int(pkt.length) &gt; 661): k = re.findall(p1,str(url)) d = re.findall(p2,str(url)) print(int(k[0])) flagit[int(k[0])-1]=chr(int(d[0]))flag =&#x27;&#x27;print(flag.join(flagit))print(flag) 1flag&#123;c2bbf9cecdaf656cf524d014c5bf046c&#125;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/categories/CTF/"}],"tags":[{"name":"流量分析，MISC","slug":"流量分析，MISC","permalink":"http://example.com/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%EF%BC%8CMISC/"}]}],"categories":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/categories/CTF/"}],"tags":[{"name":"流量分析，MISC","slug":"流量分析，MISC","permalink":"http://example.com/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%EF%BC%8CMISC/"}]}